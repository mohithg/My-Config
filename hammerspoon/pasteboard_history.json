[{"uti":"public.utf8-plain-text","text":"spoon.Seal:"},{"uti":"public.html","text":"{ show = { {\"cmd\"}, \"space\" } },"},{"uti":"public.utf8-plain-text","text":"spoon.ClipboardTool.hist_size = 100\n"},{"uti":"public.utf8-plain-text","text":"\n-- Clipboard Manager end\nhs.loadSpoon('Lunette')\nlocal customBindings = {\n\tcenter = false,\n\tfullScreen = false\n}"},{"uti":"public.utf8-plain-text","text":"spoon.Seal:bindHotkeys({ show = { {\"cmd\"}, \"space\" } })\nspoon.Seal:loadPlugins({\"apps\", \"calc\", \"useractions\"})\nspoon.Seal.plugins.pasteboard.historySize=4000\nspoon.Seal.plugins.useractions.actions = {\n    [\"Red Hat Bugzilla\"] = { url = \"https:\/\/bugzilla.redhat.com\/show_bug.cgi?id=${query}\", icon=\"favicon\", keyword=\"bz\" },\n    [\"Launchpad Bugs\"] = { url = \"https:\/\/launchpad.net\/bugs\/${query}\", icon=\"favicon\", keyword=\"lp\" },\n}\nspoon.Seal:refreshAllCommands()"},{"uti":"public.utf8-plain-text","text":"hello who are you"},{"uti":"public.utf8-plain-text","text":"Clipboard Manager end"},{"uti":"public.utf8-plain-text","text":"spoon.Seal:bindHotkeys({ show = { {\"cmd\"}, \"space\" } })"},{"uti":"public.utf8-plain-text","text":"spoon.Seal.plugins.pasteboard.historySize=4000"},{"uti":"public.utf8-plain-text","text":"spoon.Seal:loadPlugins({\"apps\", \"calc\", \"useractions\"})"},{"uti":"public.utf8-plain-text","text":"spoon.Seal.plugins.useractions.actions = {\n    [\"Red Hat Bugzilla\"] = { url = \"https:\/\/bugzilla.redhat.com\/show_bug.cgi?id=${query}\", icon=\"favicon\", keyword=\"bz\" },\n"},{"uti":"public.utf8-plain-text","text":"}\n"},{"uti":"public.utf8-plain-text","text":"spoon.Seal:start()\n"},{"uti":"public.utf8-plain-text","text":"hello who are you\n\n--- Seal end"},{"uti":"public.utf8-plain-text","text":"\n---- Seal\n"},{"uti":"public.utf8-plain-text","text":"552"},{"uti":"public.utf8-plain-text","text":"https:\/\/dominodatalab.atlassian.net\/browse\/DOM-18242"},{"uti":"public.html","text":"https:\/\/dominodatalab.atlassian.net\/browse\/DOM-"},{"uti":"public.html","text":"https:\/\/github.com\/cerebrotech\/dmm-charts"},{"uti":"public.utf8-plain-text","text":"    [\"https:\/\/github.com\/cerebrotech\/dmm-charts\"]\n"},{"uti":"public.utf8-plain-text","text":"{ url = \"https:\/\/dominodatalab.atlassian.net\/browse\/DMM-${query}\", icon=\"favicon\", keyword=\"dmm\" },"},{"uti":"public.utf8-plain-text","text":"https:\/\/github.com\/cerebrotech\/dmm-charts"},{"uti":"public.utf8-plain-text","text":"[\"DMM Git API Backend\"] = { url = \"https:\/\/github.com\/cerebrotech\/dmm-api-backend\", icon=\"favicon\", keyword=\"git-dmm-backend\" },"},{"uti":"public.html","text":"antigen"},{"uti":"public.utf8-plain-text","text":"import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\nimport java.util.stream.*;\n\npublic class Solution {\n    public static void main(String args[] ) throws Exception {\n        \/* Enter your code here. Read input from STDIN. Print output to STDOUT *\/\n        \n        \/\/ Read the graph description input from System.in as comma separated integers.\n        \/\/ The total number of integers must be an odd number, since the first number\n        \/\/ represents the number of nodes in the graph and each following pair represents\n        \/\/ the edge between the two nodes.\n        \/\/\n        Scanner scanner = new Scanner(System.in);\n        String inputLine = scanner.nextLine();\n        String[] inputs = inputLine.split(\",\");\n        if(inputs.length%2 == 0) {\n            System.out.println(\"Invalid input, the total number of comma separated integers                 must be an odd number\");\n            System.exit(1);\n        }\n        int[] ints = Stream.of(inputs).mapToInt(Integer::parseInt).toArray();        \n        int numNodes = ints[0];\n        int[] nodes = Arrays.copyOfRange(ints, 1, ints.length);\n        \/\/ Now build the DAG using this integer array\n        \/\/ First element is the total number of nodes\n        \/\/ Each following consecutive pair represents the node values edge\n\n        DAG dag = new DAG();\n    \n        \/\/ First create all nodes based on number of nodes in the input\n        for (int i=0; i<numNodes; i++) {\n            DAG.Node node = new DAG.Node(i);\n            dag.registerNode(node);  \n        }\n\n        \/\/ Now create edges\/links between the nodes and also decide root nodes.\n        for(int j=1; j+1<ints.length; j+=2) {\n            \/\/ Create from node and add as root node. It is evaluated in further iterations\n            \/\/ if really a root or not.\n            DAG.Node from = dag.getNode(ints[j]);\n            dag.addAsRootNode(from);\n\n            \/\/ Create to node, connect from --> to\n            DAG.Node to = dag.getNode(ints[j+1]); \n            from.addConnectedNode(to);\n            \n            \/\/ If to node was earlier added as a root node, remove it since it is not really one\n            if(dag.isRootNode(to)) {\n                dag.removeAsRootNode(to);\n            }\n        }\n\n        \/\/ Finally, iterate the root nodes in DAG to print output values.\n        for(Node node: dag.getRootNodes()) {\n            \/\/ TODO\n        }\n    }\n\n    class DAG {\n        List<Node> rootNodes = new LinkedList<>();\n        \/\/ Set<Integer> allNodeValues = new HashSet<>();\n        List<Node> allNodes = new LinkedList<>();\n\n        public void registerNode(Node node) {\n            allNodes.add(node);\n        }\n\n        public Node getNode(int value) {\n            for(Node node: allNodes) {\n                if(node.getValue() == value) {\n                    return node;\n                }\n            }\n        }\n\n        public void addAsRootNode(Node node) {\n            rootNodes.add(node);\n        }\n\n        public boolean isRootNode(Node node) {\n            return rootNodes.contains(node);\n        }\n\n        public void removeAsRootNode(Node node) {\n            rootNodes.remove(node);\n        }\n\n        public List<Node> getRootNodes() {\n            return rootNodes;\n        }\n\n        \/\/ public void registerNodeValue(int value) {\n        \/\/     allNodeValues.add(value);\n        \/\/ }\n\n        \/\/ public boolean isNodePresent(int value) {\n        \/\/     return allNodeValues.contains(value);\n        \/\/ }\n\n        static class Node{\n            private int value;\n            private List<Node> connectedNodes = new LinkedList<>();\n            \n            public Node(int value) {\n                this.value = value;\n            }\n\n            public int getValue() {\n                return value;\n            }\n\n            public void setValue(int value) {\n                this.value = value;\n            }\n\n            public List<Node> getConnectedNodes() {\n                return connectedNodes;\n            }\n\n            public void addConnectedNode(Node node) {\n                this.connectedNodes.add(node); \n            }\n        }\n    }\n}"},{"uti":"public.utf8-plain-text","text":"class Node{\n            private int value;\n            private List<Node> connectedNodes = new LinkedList<>();\n            \n            public Node(int value) {\n                this.value = value;\n            }\n\n            public int getValue() {\n                return value;\n            }\n\n            public void setValue(int value) {\n                this.value = value;\n            }\n\n            public List<Node> getConnectedNodes() {\n                return connectedNodes;\n            }\n\n            public void addConnectedNode(Node node) {\n                this.connectedNodes.add(node); \n            }\n        }"},{"uti":"public.utf8-plain-text","text":"public "},{"uti":"public.html","text":"Rakesh Dharangaonkar"},{"uti":"public.html","text":"Does the code solve the problem? = 4\nis separation of functions clean = 5\nCode quality (code should be readable, no repetition of code etc., ) = 4\n\nStatus: Move to next step\n"},{"uti":"public.utf8-plain-text","text":"samsung wf1000xm3"},{"uti":"public.utf8-plain-text","text":"\n ~\/work\/dmm\/dmm-crux   master work\/dmm\/dmm-crux   master \n ~\/work\/dmm\/dmm-crux   master \n ~\/work\/dmm\/dmm-crux   master \n ~\/work\/dmm\/dmm-crux   master "},{"uti":"public.utf8-plain-text","text":""},{"uti":"public.html","text":"https:\/\/webdriver.io\/blog\/2019\/06\/25\/file-upload.html"},{"uti":"public.html","text":"submitForm"},{"uti":"public.html","text":"fileHandler"},{"uti":"public.html","text":"browser.chooseFile('input[type=\"file\"]', value);"},{"uti":"public.html","text":"https:\/\/github.com\/cerebrotech\/dmm-frontend\/blob\/master\/tests\/utils\/index.js#L94"},{"uti":"public.utf8-plain-text","text":"~\/work\/dmm\/dmm-infra"},{"uti":"public.utf8-plain-text","text":"       v10.11.0"},{"uti":"public.utf8-plain-text","text":"        v8.15.0"},{"uti":"public.html","text":"\/\/ File handler\nexport const fileHandler = (name, value) => {\n  browser.chooseFile('input[type=\"file\"]', value);\n  waitForTextToAppear('.filepond--file-status-main', 'Upload complete');\n};\n"},{"uti":"public.utf8-plain-text","text":"isexe"},{"uti":"public.utf8-plain-text","text":"\nnpm ERR! This is probably not a problem with npm. There is likely additional"},{"uti":"public.utf8-plain-text","text":"(module.js:566:32)\n    at tryModuleLoad (module.js:506:12)\n    at Function.Module._load (module.js:498:3)\n\n> node-sass@4.8.3 install \/Users\/mohithg\/work\/dmm\/dmm-frontend\/node_modules\/node-sass\n> node scripts\/install.js\n\nmodule.js:550\n    throw err;\n    ^\n\nError: Cannot find module 'fs.realpath'\n    at Function.Module._resolveFilename (module.js:548:15)\n    at Function.Module._load (module.js:475:25)\n    at Module.require (module.js:597:17)\n    at require (internal\/module.js:11:18)\n    at Object.<anonymous> (\/Users\/mohithg\/work\/dmm\/dmm-frontend\/node_modules\/glob\/glob.js:44:10)\n    at Module._compile (module.js:653:30)\n    at Object.Module._extensions..js (module.js:664:10)\n    at Module.load (module.js:566:32)\n    at tryModuleLoad (module.js:506:12)\n    at Function.Module._load (module.js:498:3)\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: phantomjs-prebuilt@2.1.16 (node_modules\/phantomjs-prebuilt):\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: phantomjs-prebuilt@2.1.16 install: `node install.js`\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: Exit status 1\n\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! node-sass@4.8.3 install: `node scripts\/install.js`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the node-sass@4.8.3 install script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     \/Users\/mohithg\/.npm\/_logs\/2019-12-30T08_03_18_367Z-debug.log\n ✘  ~\/work\/dmm\/dmm-frontend   master ●  npm start\n\n> flexi@1.0.0 start \/Users\/mohithg\/work\/dmm\/dmm-frontend\n> react-scripts start\n\nmodule.js:550\n    throw err;\n    ^\n\nError: Cannot find module 'array-union'\n    at Function.Module._resolveFilename (module.js:548:15)\n    at Function.Module._load (module.js:475:25)\n    at Module.require (module.js:597:17)\n    at require (internal\/module.js:11:18)\n    at Object.<anonymous> (\/Users\/mohithg\/work\/dmm\/dmm-frontend\/node_modules\/globby\/index.js:2:20)\n    at Module._compile (module.js:653:30)\n    at Object.Module._extensions..js (module.js:664:10)\n    at Module.load (module.js:566:32)\n    at tryModuleLoad (module.js:506:12)\n    at Function.Module._load (module.js:498:3)\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! flexi@1.0.0 start: `react-scripts start`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the flexi@1.0.0 start script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     \/Users\/mohithg\/.npm\/_logs\/2019-12-30T08_03_25_173Z-debug.log\n ✘  ~\/work\/dmm\/dmm-frontend   master ●  npm install array-union\nnpm WARN deprecated phantomjs-prebuilt@2.1.16: this package is now deprecated\n\n> node-sass@4.8.3 install \/Users\/mohithg\/work\/dmm\/dmm-frontend\/node_modules\/node-sass\n> node scripts\/install.js\n\nmodule.js:550\n    throw err;\n    ^\n\nError: Cannot find module 'fs.realpath'\n    at Function.Module._resolveFilename (module.js:548:15)\n    at Function.Module._load (module.js:475:25)\n    at Module.require (module.js:597:17)\n    at require (internal\/module.js:1"},{"uti":"public.utf8-plain-text","text":"fs.realpath"},{"uti":"public.utf8-plain-text","text":"xcode-select: error: tool 'xcodebuild' requires Xcode, but active developer directory '\/Library\/Developer\/CommandLineTools' is a command line tools instance"},{"uti":"public.html","text":"xcode-select --install"},{"uti":"public.utf8-plain-text","text":"4b67bee87048ed979b40b683444b20c740acbb12"},{"uti":"public.utf8-plain-text","text":"Unexpected token import"},{"uti":"public.utf8-plain-text","text":""},{"uti":"public.utf8-plain-text","text":"4b67bee"},{"uti":"public.utf8-plain-text","text":""},{"uti":"public.utf8-plain-text","text":"https:\/\/github.com\/cerebrotech\/dmm-frontend\/invitations"},{"uti":"public.utf8-plain-text","text":"https:\/\/github.com\/ErikCH\/DevYouTubeList"},{"uti":"public.html","text":"https:\/\/www.youtube.com\/watch?v=oK_XtfXPkqw"},{"uti":"public.html","text":"request"},{"uti":"public.html","text":"RestartExecution"},{"uti":"public.html","text":"findExecutionById"},{"uti":"public.html","text":"DispatcherState"},{"uti":"public.html","text":"executionSpec: ExecutionSpec"},{"uti":"public.html","text":"executionId: DmmId,\n  executionSpecId: DmmId,\n  executor: Executor,\n  status: ExecutionStatus"},{"uti":"public.html","text":"ExecutionUnit(executionId)"},{"uti":"public.html","text":"executionSpec"},{"uti":"public.utf8-plain-text","text":"https:\/\/github.com\/cerebrotech\/dmm-crux\/pull\/new\/retry-execution"},{"uti":"public.utf8-plain-text","text":"https:\/\/dominodatalab.atlassian.net\/browse\/DMM-264"},{"uti":"public.utf8-plain-text","text":"\/Users\/mohithg\/work\/dmm\/dmm-crux\/dispatcher\/dispatcher-implementation\/src\/main\/scala\/dmm\/dispatcher\/implementation\/DispatcherEntity.scala"},{"uti":"public.html","text":"ExecutionRestarted"},{"uti":"public.html","text":"case class ExecutionScheduled(spec: ExecutionSpecEntity) extends DispatcherEvent\n\nobject ExecutionScheduled {\n  implicit val format = Json.format[ExecutionScheduled]\n}"},{"uti":"public.utf8-plain-text","text":"ExecutionRestarted"},{"uti":"public.html","text":"executionId"},{"uti":"public.html","text":"ExecutionRestarted"},{"uti":"public.utf8-plain-text","text":""},{"uti":"public.html","text":"Initiative\nBe responsible for your work beyond coding. See it through\nBelieve in the problem that Domino is solving \/ Domino as a company\n“Do whatever it takes” attitude \/ Go the extra mile \/ Larger ownership\nBe nice, dont be an asshole. Care about other people\nGive and take feedback constructively\nFast learner\nBe hungry \/ Have “fire”\nHigh quality work \nRaw horsepower "},{"uti":"public.html","text":"This position will be located in our office at Bangalore, India. You will enjoy our office perks: catered meals, snacks, game room, ergonomic desks, massages, bi-weekly All Hands and more. What you will also get to experience is a company that believes in small teams for maximum impact; seeks well-rounded talent to ensure a full perspective on our customers’ experience, understands that this is a marathon, not a sprint; that continuously and purposefully builds an inclusive culture where everyone is able to do and be the best version of themselves."},{"uti":"public.html","text":"https:\/\/boards.greenhouse.io\/twilio\/jobs\/1960716?utm_campaign=google_jobs_apply&utm_source=google_jobs_apply&utm_medium=organic"},{"uti":"public.utf8-plain-text","text":"self.algo"},{"uti":"public.utf8-plain-text","text":"50% - Coding\n30% - Arch discussions\n20% - Reviews & talking\n----\n\n- Learning\n- Challenging Work\n\tOptimization\n\tScalability\n- Tech Discussions\n- Work life Balance\n\t50 - Border\n\n"}]